@using Microsoft.AspNetCore.Identity
@using EmployeeTaxDeclaration.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
     <li class="nav-item dropdown">
         <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
             @UserManager.GetUserAsync(User).Result.FirstName
         </a>
         <ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
             <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index"><i class="bi bi-person-circle"></i> Profile</a></li>
         </ul>
     </li>
        
        
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link border-0"><i class="bi bi-box-arrow-left"></i> Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="nav-link @(IsActivePage1("/Identity/Account/Register"))" id="register" asp-area="Identity" asp-page="/Account/Register"><i class="bi bi-person-plus-fill"></i> Register</a>
    </li>
    <li class="nav-item">
            <a class="nav-link @(IsActivePage1("/Identity/Account/Login"))" id="login" asp-area="Identity" asp-page="/Account/Login"><i class="bi bi-arrow-right-square-fill"></i> Login</a>
    </li>
}
</ul>
@functions {
    public string IsActivePage1(string page)
    {
        var currentPage = Context.Request.Path;
        return currentPage.Equals(page, StringComparison.OrdinalIgnoreCase) ? "active" : "";
    }
}
